# API Gateway - Routes requests to microservices
server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      # Auto-discover services from Eureka
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # Define specific routes with resilience patterns
      routes:
        - id: order-service
          uri: lb://order-service  # lb:// = load balancer protocol, uses service discovery to find order-service instances
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-cb
                fallbackUri: forward:/fallback/orders  # Redirects to fallback when circuit opens
        - id: pricing-service
          uri: lb://pricing-service  # lb:// = load balancer protocol, uses service discovery to find pricing-service instances
          predicates:
            - Path=/api/pricing/**
          filters:
            - name: CircuitBreaker
              args:
                name: pricing-cb
                fallbackUri: forward:/fallback/pricing  # Redirects to fallback when circuit opens

# Service discovery configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

# Circuit breaker defaults
resilience4j:
  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 50    # Circuit opens when 50%+ of calls fail
        waitDurationInOpenState: 10s # How long to wait before testing if service recovered
          # After 30 seconds, circuit goes to HALF-OPEN state
        # and makes one test call to check service health
        minimumNumberOfCalls: 5      # Need at least 5 calls before circuit can open
        slidingWindowSize: 10        # Evaluate failure rate over last 10 calls
    instances:
      order-cb:
        base-config: default
      pricing-cb:
        base-config: default

# Health monitoring
management:
  endpoints:
    web:
      exposure:
        include: "*"    # Expose all actuator endpoints for debugging
          # /actuator/health - Shows if gateway is healthy
          # /actuator/circuitbreakers - Shows circuit breaker states (order-cb, pricing-cb)
          # /actuator/mappings - Shows all route mappings and handlers
          # /actuator/serviceregistry - Shows Eureka service registration info
          # /actuator/circuitbreakerevents - Shows circuit breaker event history
          # /actuator/metrics - Shows application metrics
        # Useful for monitoring, debugging, and load balancer health checks